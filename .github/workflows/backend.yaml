name: Backend

on:
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yaml"
  merge_group:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yaml"
  push:
    branches:
      - main
    paths:
      - "backend/**"
      - ".github/workflows/backend.yaml"

jobs:
  check:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Setup Python"
        uses: "actions/setup-python@v4"
        with:
          python-version: "3.11"
          cache: "pipenv"
          cache-dependency-path: "backend/Pipfile.lock"
      - name: "Install pipenv"
        run: "pip install pipenv wheel"
      - name: "Install dependencies"
        working-directory: "backend"
        run: "pipenv install --dev"
      - name: "Run pyre"
        working-directory: "backend"
        run: |
          set -o pipefail
          pipenv run pyre | tee >(sed 's, ,:,' | awk -F: '{sub(" ", "", $5); print "::error file=" ENVIRON["PWD"] "/" $1 ",line=" $2 ",col=" $3 ",title=" $4 "::" $5}')
      - name: "Run ruff"
        working-directory: "backend"
        run: "pipenv run ruff check --output-format github ."
      - name: "Run black"
        working-directory: "backend"
        run: |
          set -o pipefail
          pipenv run black --check --diff .

  build:
    needs: ["check"]
    if: "github.event_name == 'push'"
    runs-on: "ubuntu-24.04"
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Configure AWS credentials"
        uses: "aws-actions/configure-aws-credentials@v4"
        with:
          role-to-assume: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_DEV }}:role/github-actions-uma"
          aws-region: "us-west-2"

      - name: "Log into ECR"
        id: ecr-login
        uses: "aws-actions/amazon-ecr-login@v2"

      - name: "Setup QEMU"
        uses: "docker/setup-qemu-action@v3"

      - name: "Setup builder"
        uses: "docker/setup-buildx-action@v3"

      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 20

      - name: "Determine metadata"
        id: metadata
        run: |
          GIT_HASH="$(git log -1 --format='%H' backend)"
          echo "hash_short=${GIT_HASH:0:8}" >> $GITHUB_OUTPUT
          echo "date=$(date -u '+%Y%m%d')" >> $GITHUB_OUTPUT

      - name: "Docker metadata"
        id: docker-meta
        uses: "docker/metadata-action@v4"
        with:
          images: ${{ steps.ecr-login.outputs.registry }}/uma-sandbox
          labels: |
            org.opencontainers.image.vendor=Lightspark
            org.opencontainers.image.title=uma-sandbox

      - name: "Build and push image"
        uses: "docker/build-push-action@v3"
        with:
          context: backend
          file: backend/Dockerfile
          platforms: linux/arm64,linux/amd64
          build-args: BUILDKIT_INLINE_CACHE=1
          cache-from: type=registry,ref=${{ steps.ecr-login.outputs.registry }}/uma-sandbox:latest
          labels: ${{ steps.docker-meta.outputs.labels }}
          tags: |
            ${{ steps.ecr-login.outputs.registry }}/uma-sandbox:latest,
            ${{ steps.ecr-login.outputs.registry }}/uma-sandbox:git_${{ steps.metadata.outputs.hash_short }},
            ${{ steps.ecr-login.outputs.registry }}/uma-sandbox:git_${{ steps.metadata.outputs.date }}_${{ steps.metadata.outputs.hash_short }}
          push: true
          provenance: false # skopeo can't handle this
