"""first commit

Revision ID: e765340b59a4
Revises: 
Create Date: 2024-12-05 15:58:34.063008

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e765340b59a4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("google_id", sa.String(), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("webauthn_id", sa.String(), nullable=True),
        sa.Column(
            "kyc_status",
            sa.Enum("VERIFIED", "NOT_VERIFIED", "PENDING", "UNKNOWN", name="kycstatus"),
            nullable=False,
        ),
        sa.Column("email_address", sa.String(), nullable=True),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("avatar", sa.LargeBinary(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "quote",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("payment_hash", sa.String(), nullable=False),
        sa.Column(
            "expires_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("multiplier", sa.Float(), nullable=False),
        sa.Column("sending_currency_code", sa.String(), nullable=False),
        sa.Column("receiving_currency_code", sa.String(), nullable=False),
        sa.Column("fees", sa.Integer(), nullable=False),
        sa.Column("total_receiving_amount", sa.Integer(), nullable=False),
        sa.Column("total_sending_amount", sa.Integer(), nullable=False),
        sa.Column("callback_uuid", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("settled_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("quote", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_quote_payment_hash"), ["payment_hash"], unique=True
        )

    op.create_table(
        "transaction",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("amount_in_lowest_denom", sa.Integer(), nullable=False),
        sa.Column("currency_code", sa.String(), nullable=False),
        sa.Column("sender_uma", sa.String(), nullable=False),
        sa.Column("receiver_uma", sa.String(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_preferences",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column(
            "preference_type",
            sa.Enum(
                "WALLET_SKIN",
                "PUSH_NOTIFICATIONS",
                "DEBUG_MODE",
                "CUSTOM_LIGHTSPARK_BASE_URL",
                name="preferencetype",
            ),
            nullable=False,
        ),
        sa.Column("value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "wallet",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("amount_in_lowest_denom", sa.Integer(), nullable=False),
        sa.Column(
            "color",
            sa.Enum(
                "ONE",
                "TWO",
                "THREE",
                "FOUR",
                "FIVE",
                "SIX",
                "SEVEN",
                "EIGHT",
                "NINE",
                "TEN",
                name="color",
            ),
            nullable=False,
        ),
        sa.Column("device_token", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "currency",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("wallet_id", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallet.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "uma",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("wallet_id", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("default", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallet.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("uma")
    op.drop_table("currency")
    op.drop_table("wallet")
    op.drop_table("user_preferences")
    op.drop_table("transaction")
    with op.batch_alter_table("quote", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_quote_payment_hash"))

    op.drop_table("quote")
    op.drop_table("user")
    # ### end Alembic commands ###
